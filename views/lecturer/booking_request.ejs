<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Lab test1</title>
    <link rel="stylesheet" href="../../css/style-lecture.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <script src="/public/js/bootstrap.bundle.min.js"></script>
    
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link
        href="https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900&display=swap"
        rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.4.33/dist/sweetalert2.all.min.js"></script>

</head>

    <style>
        
        #checkrequest {
            color: #4c1b9a!important;
            text-decoration: none;
            cursor: not-allowed;
        }
        @media (max-width: 767px) {
            .navbar-brand {
              font-size: 17px; /* Decrease font size */
            }
          }
          
          /* For medium devices (e.g., tablets) */
          @media (min-width: 768px) and (max-width: 991px) {
            .navbar-brand {
              font-size: 20px; /* Adjust font size */
            }
          }
          
          /* For large devices (e.g., desktops) */
          @media (min-width: 992px) {
            .navbar-brand {
              font-size: 28px; /* Default font size */
            }
          }
          @media (max-width: 767px) {
            .navbar-brand {
                font-size: 17px;
                /* Decrease font size */
            }
        }
        
        /* For medium devices (e.g., tablets) */
        @media (min-width: 768px) and (max-width: 991px) {
            .navbar-brand {
                font-size: 20px;
                /* Adjust font size */
            }
        }
        
        /* For large devices (e.g., desktops) */
        @media (min-width: 992px) {
            .navbar-brand {
                font-size: 28px;
                /* Default font size */
            }
        }
         
    </style>

<body>
    <nav class="navbar navbar-expand-lg   navbar-light sticky-top">
        
        <a class="navbar-brand mb-1" href="#">
          <img src="https://scontent.fbkk22-6.fna.fbcdn.net/v/t1.15752-9/435364756_1095978388127075_979169200369574503_n.jpg?_nc_cat=104&ccb=1-7&_nc_sid=5f2048&_nc_eui2=AeGSnzHNcxx4XibUOxTCwEjyUiMuJqa8RepSIy4mprxF6kLsu5mxCJSVn8Nnv6I9Fk6TOS_6UfcpGkr-2CQrax2y&_nc_ohc=gNLeytMHtasAb7dPK62&_nc_ht=scontent.fbkk22-6.fna&oh=03_Q7cD1QF1wktD3glUFxXuYYpvqDSXZTnuGnGgVqI1cyl4BINsMg&oe=664CBE86" height="70px" width="70px" alt="" id="e">
      </a>
      <a class="navbar-brand mb-1" href="#">
          <h1 class="rainbow-text">ROOMMEETEE</h1>
      </a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
              <span class="navbar-toggler-icon"></span>
            </button>
        
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
              <ul class="navbar-nav ml-auto">
                <li class="nav-item">
                  <a href="/lecturer/room-lists" class="nav-link" id="roomlist">ROOM LISTS</a>
                </li>
                <li class="nav-item">
                  <a href="/lecturer/booking-requests" class="nav-link"  id="checkrequest" >CHECK REQUEST</a>
                </li>
                <li class="nav-item">
                  <a href="/lecturer/dashboard" class="nav-link" id="Dashboard" >DASHBOARD</a>
                </li>
                <li class="nav-item">
                  <a href="/lecturer/history" class="nav-link" id="History" >HISTORY</a>
                </li>
                <li class="nav-item ">
                    <div>
                        <a href="#" class="nav-link " ><button class="btn btn-danger" id="logout"> LOGOUT </button></a>
                        <span><%= user.email %></span>
                </div>
                </li>
                
              </ul>
             
            </div>
          </div>
      </nav>
  
    <table class="table table-striped  w-100 " id="Table">
        <thead>
            <tr>
                <th class="text-center bg-dark text-white fs-4" id="">Picture</th>
                <th class="text-center bg-dark text-white fs-4" id="">Room Name</th>
                <th class="text-center bg-dark text-white fs-4" id="">Time Slot</th>
                <th class="text-center bg-dark text-white fs-4" id="">Objective</th>
                <th class="text-center bg-dark text-white fs-4" id="">Status</th>
                <th class="tex-start bg-dark text-white fs-4" id="">Action</th>
            </tr>
        </thead>
        <tbody>
            <% bookings.forEach(booking => { %>
            <tr>
                <td class="text-white mx-4 text-center" id="Table2">
                    <div class="text-start text-dark">
                        <img src="/img/<%= booking.image_path %>" alt=""  width="350px" height="200px" >
                    </div>
                </td>
                <td class="text-white mx-4 text-center" id="Table2">
                    <div class="text-start text-dark"> 
                        <h3><%= booking.room_name %></h3>
                    </div>
                </td>
                
                <td class="text-white mx-4 text-center" id="Table2">
                    <div class="text-start text-dark"> 
                        <h3><%= booking.start_time %> - <%= booking.end_time %></h3>
                    </div>
                </td>
                <td class="text-white mx-4 text-center" id="Table2">
                    <div class="text-start text-dark"> 
                        <h3><%= booking.objective %></h3>
                    </div>
                </td>
                
                <td class="text-white mx-4 text-center" id="Table2">
                    <div class="text-center text-dark"> 
                        <h3 class="text-warning"><%= booking.status %> </h3>
                    </div>
                </td>
                <td class="text-white mx-4 text-center" id="Table2">
                    <div class="text-start text-dark"> 
                        <% if (booking.status === 'pending') { %>
                            <form action="/lecturer/approve-booking" method="POST">
                                <input type="hidden" name="bookingId" value="<%= booking.id %>">
                                <button type="submit" name="action" value="approve" class="btn btn-success m-1">Approve</button>
                            </form>
                            <form action="/lecturer/reject-booking" method="POST">
                                <input type="hidden" name="bookingId" value="<%= booking.id %>">
                                <button type="submit" name="action" value="reject" class="btn btn-danger m-1"><label class="px-2">Reject</label></button>
                            </form>
                        <% } else { %>
                            <!-- Display a message or alternative action for approved/rejected bookings -->
                            <%= booking.status %>
                        <% } %>
                    </div>
                </td>
            </tr>
            <% }); %>
        </tbody>
    </table>

    <!-- JavaScript -->
    <script>

document.querySelector('#logout').onclick = function () {
        
    Swal.fire({
                icon: 'warning',
                title: 'Sure to enable this room?',
                showCancelButton: true,
                confirmButtonText: 'OK'
            }).then((result) => {
                if (result.isConfirmed) {
                   window.location.href="/logout"
                    }
                })
            };
    

        var mode = "add";
        var editID = null; // Variable to store the index of the room being edited
        const modalAddEdit = new bootstrap.Modal(document.querySelector('#modalAddEdit'));

        function readRooms() {
    let output = '<thead class="table-dark"><tr><th>Name</th><th>Time Slot</th><th>Booking Name</th> <th>Booking Objective</th> <th>Action</th></tr></thead><tbody>';
    rooms.forEach(function (room) {
        output += '<tr>';
        output += `<td>${room.name}</td>`;
        output += `<td>${room.time}</td>`;
        output += `<td>${room.Pending}</td>`;
        output += `<td>${room.Objective}</td>`;
        if (room.disabled) {
            output += `<td><button class="btn btn-success btnEnable me-2" id=${room.id}>Enable</button>`;
        } else {
            output += `<td><button class="btn btn-primary btnApprove me-2" id=${room.id}>Approve</button>`;
            output += `<button class="btn btn-danger btnDisapprove me-2" id=${room.id}>Disapprove</button>`;
        }
      //  output += `<button class="btn btn-primary btnEdit me-2" id=${room.id}>Edit</button></td>`;
        output += '</tr>';
    });
    output += '</tbody>';

    document.querySelector('table').innerHTML = output;
}

        function disableRoom(id) {
            Swal.fire({
                icon: 'warning',
                title: 'Sure to disable this room?',
                showCancelButton: true,
                confirmButtonText: 'OK'
            }).then((result) => {
                if (result.isConfirmed) {
                    const roomIndex = rooms.findIndex(room => room.id == id);
                    if (roomIndex !== -1) {
                        rooms[roomIndex].disabled = true; // Set the room as disabled
                        readRooms();
                    }
                }
            });
        }

        function enableRoom(id) {
            Swal.fire({
                icon: 'warning',
                title: 'Sure to enable this room?',
                showCancelButton: true,
                confirmButtonText: 'OK'
            }).then((result) => {
                if (result.isConfirmed) {
                    const roomIndex = rooms.findIndex(room => room.id == id);
                    if (roomIndex !== -1) {
                        rooms[roomIndex].disabled = false; // Set the room as enabled
                        readRooms();
                    }
                }
            });
        }

        function approveRoom(id) {
            Swal.fire({
                icon: 'warning',
                title: 'Are you sure you want to approve this room?',
                showCancelButton: true,
                confirmButtonText: 'Approve'
            }).then((result) => {
                if (result.isConfirmed) {
                    Swal.fire({
                        icon: "success",
                        title: "approve Complete",
                        showCancelButton: false,
                        confirmButtonText: "OK",
                    }).then((result) => {
                        if (roomIndex !== -1) {
                        rooms.splice(roomIndex, 1); // Delete the room from the array
                        readRooms();
                    }
                    });
                    const roomIndex = rooms.findIndex(room => room.id == id);
                    
                }
            });
        }

        function disapproveRoom(id) {
            Swal.fire({
                icon: 'warning',
                title: 'Are you sure you want to disapprove this room?',
                showCancelButton: true,
                confirmButtonText: 'Disapprove'
            }).then((result) => {
                if (result.isConfirmed) {
                    Swal.fire({
                        icon: "success",
                        title: "Disapprove Complete",
                        showCancelButton: false,
                        confirmButtonText: "OK",
                    }).then((result) => {
                        if (roomIndex !== -1) {
                        rooms.splice(roomIndex, 1); // Delete the room from the array
                        readRooms();
                    }
                    });
                    const roomIndex = rooms.findIndex(room => room.id == id);
                    
                }
            });
        }

        function addRoom() {
            const name = document.querySelector('#txtName').value;
            const timeSlot = document.querySelector('#txtTimeSlot').value;
            const lastID = rooms.length > 0 ? rooms[rooms.length - 1].id : 0;
            const newRoom = { id: lastID + 1, name: name, time: timeSlot, disabled: false }; // New rooms are initially enabled
            rooms.push(newRoom);
            modalAddEdit.hide();
            readRooms();
        }

        function editRoom(id) {
            const roomIndex = rooms.findIndex(room => room.id === id);
            const room = rooms[roomIndex];
            room.name = document.querySelector('#txtName').value;
            room.time = document.querySelector('#txtTimeSlot').value;
            modalAddEdit.hide();
            readRooms();
        }

        readRooms();

        document.querySelector('#btnAddEdit').onclick = function () {
            if (mode == "add") {
                addRoom();
            } else {
                editRoom(editID);
            }
        }

        document.querySelector('table').onclick = function (e) {
            if (e.target.classList.contains("btnDisable")) {
                disableRoom(e.target.id);
            } else if (e.target.classList.contains("btnEnable")) {
                enableRoom(e.target.id);
            } else if (e.target.classList.contains("btnApprove")) {
                approveRoom(e.target.id);
            } else if (e.target.classList.contains("btnDisapprove")) {
                disapproveRoom(e.target.id);
            } else if (e.target.classList.contains("btnEdit")) {
                editID = parseInt(e.target.id);
                const roomIndex = rooms.findIndex(room => room.id === editID);
                const room = rooms[roomIndex];
                document.querySelector('#txtName').value = room.name;
                document.querySelector('#txtTimeSlot').value = room.time;
                modalAddEdit.show();
                document.querySelector('#modalTitleId').innerText = "Edit Room " + editID;
                mode = "edit";
            }
        }

        document.querySelector('#logout').onclick = function () {
        
                    window.location.href = "/logout"
                
        };
    </script>
    
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
</body>

</html>
